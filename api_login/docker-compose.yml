
services:
  # Serwer MySQL
  mysql:
    image: mysql:8.0
    container_name: api_login_mysql
    environment:
      MYSQL_ROOT_PASSWORD: login      # Hasło roota
      MYSQL_DATABASE: login    # Nazwa domyślnej bazy danych
      MYSQL_USER: login               # Nazwa użytkownika
      MYSQL_PASSWORD: login       # Hasło użytkownika
    volumes:
      - db-data:/var/lib/mysql       # Dane przechowywane na wolumenie
    ports:
      - "3306:3306"                 # Mapowanie portu MySQL
    networks:
      - microservice-net
    # restart: always

  # Serwer PHP
  php:
    build:
        context: ./docker/php
    container_name: api_login_php
    volumes:
      - ./:/var/www/html          # Montowanie aplikacji z lokalnego folderu
      - "./docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
      - "~/.ssh:/root/.ssh"
    networks:
      - microservice-net
    depends_on:
      - mysql                        # Uruchamia się po MySQL

  # Serwer Nginx
  nginx:
    image: nginx:1.21-alpine         # Używamy lekkiej wersji Nginx z Alpine
    container_name: api_login_nginx
    volumes:
      - ./:/var/www/html          # Montowanie aplikacji z lokalnego folderu
      - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf  # Montowanie pliku konfiguracyjnego Nginx
    ports:
      - "80:80"                      # Mapowanie portu HTTP
    # restart: always
    depends_on:
      - php                          # Uruchamia się po PHP
    networks:
      - microservice-net
volumes:
  db-data:                           # Definicja wolumenu dla danych MySQL
  db-data-test:                           # Definicja wolumenu dla danych MySQL

networks:
  microservice-net:
    external: true